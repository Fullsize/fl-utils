import{R as o,r as i}from"./index-RYns6xqu.js";import{S as g}from"./ShowDocs-DJ69lLYk.js";import"./jsx-runtime-DEdD30eg.js";async function w(d,n,c){const s=[],r=new Set;for(const a of n){const e=Promise.resolve().then(()=>c(a,n));s.push(e),r.add(e);const t=()=>r.delete(e);e.then(t).catch(t),r.size>=d&&await Promise.race(r)}return Promise.all(s)}const S=()=>{const[d,n]=i.useState([]),[c,s]=i.useState(!1),r=async()=>{s(!0);const a=[1,2,3,4,5,6,7,8,9,10],e=async t=>new Promise(f=>{setTimeout(()=>{f(`Task ${t} completed`)},1e3*Math.random())});try{const t=await w(3,a,e);n(t)}catch(t){console.error("Error in asyncPool:",t)}s(!1)};return o.createElement("div",null,o.createElement("h2",null,"Async Pool Example"),o.createElement("button",{onClick:r,disabled:c},c?"Processing...":"Start Tasks"),o.createElement("ul",null,d.map((a,e)=>o.createElement("li",{key:e},a))))},R={title:"base/asyncPool",component:S},l={render:()=>o.createElement(g,{md:"doc/asyncPool.md"})},m={render:()=>o.createElement(S,null)};var u,p,P;l.parameters={...l.parameters,docs:{...(u=l.parameters)==null?void 0:u.docs,source:{originalSource:`{
  render: () => <ShowDocs md={"doc/asyncPool.md"} />
}`,...(P=(p=l.parameters)==null?void 0:p.docs)==null?void 0:P.source}}};var y,E,h;m.parameters={...m.parameters,docs:{...(y=m.parameters)==null?void 0:y.docs,source:{originalSource:`{
  render: () => <Page />
}`,...(h=(E=m.parameters)==null?void 0:E.docs)==null?void 0:h.source}}};const T=["Doc","Demo"];export{m as Demo,l as Doc,T as __namedExportsOrder,R as default};
